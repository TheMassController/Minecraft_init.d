#!/bin/bash
# /etc/init.d/minecraft
# version 0.4.4  29-07-2013 (DD-MM-YYYY)

### BEGIN INIT INFO
# Provides:   minecraft
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    Minecraft server
# Description:    Starts the minecraft server
### END INIT INFO

#Settings
SERVICE='minecraft.jar'
USERNAME='minecraft'
SCREENNAME='minecraft'
MCPATH='/opt/minecraft/'
MAXHEAP=1024
BYTESUFFIX='M'
OPTIONS='nogui'
HISTORY=1024
CPU_COUNT=2
COMMAND_WAIT_TIME=7
INVOCATION="java -Xmx${MAXHEAP}$BYTESUFFIX -XX:+UseConcMarkSweepGC -XX:+UseParNewGC \
-XX:+CMSIncrementalPacing -XX:ParallelGCThreads=$CPU_COUNT -XX:+AggressiveOpts \
-jar $SERVICE $OPTIONS"

mc_start() {
  if  pgrep -u $USERNAME -f $SERVICE > /dev/null
  then
    echo "$SERVICE is already running!"
  else
    echo "Starting $SERVICE..."
    cd $MCPATH
    sudo -u $USERNAME screen -h $HISTORY -dmS $SCREENNAME $INVOCATION
    sleep $COMMAND_WAIT_TIME
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
      echo "$SERVICE is now running."
    else
      echo "Error! Could not start $SERVICE!" 1>&2
    fi
  fi
}

mc_stop() {
  if pgrep -u $USERNAME -f $SERVICE > /dev/null
  then
    echo "Stopping $SERVICE"
    sudo -u $USERNAME screen -p 0 -S $SCREENNAME -X stuff $'say SERVER SHUTTING DOWN IN 10 SECONDS. Saving map...\n'
    sleep 10
    sudo -u $USERNAME screen -p 0 -S $SCREENNAME -X stuff $'stop\n'
    sleep $COMMAND_WAIT_TIME
  else
    echo "$SERVICE was not running."
  fi
  if pgrep -u $USERNAME -f $SERVICE > /dev/null
  then
    echo "Error! $SERVICE could not be stopped." 1>&2
  else
    echo "$SERVICE is stopped."
  fi
}

mc_command() {
  COMMAND=$1
  if pgrep -u $USERNAME -f $SERVICE > /dev/null
  then
    pre_log_len=`wc -l "$MCPATH/server.log" | awk '{print $1}'`
    echo "$SERVICE is running... executing command"
    sudo -u $USERNAME screen -S $SCREENNAME -p 0 -X stuff "$COMMAND$(printf \\r)"
    sleep $COMMAND_WAIT_TIME
    # print output
    tail -n $[`wc -l "$MCPATH/server.log" | awk '{print $1}'`-$pre_log_len] "$MCPATH/server.log"
  else 
    echo "$SERVICE is not running!"
  fi
}

#Start-Stop here
case "$1" in
  start)
    mc_start
    ;;
  stop)
    mc_stop
    ;;
  restart)
    mc_stop
    mc_start
    ;;
  status)
    if pgrep -u $USERNAME -f $SERVICE > /dev/null
    then
      echo "$SERVICE is running."
    else
      echo "$SERVICE is not running."
    fi
    ;;
  command)
    if [ $# -gt 1 ]; then
	shift
      mc_command "$*"
    else
      echo "Must specify server command (try 'help'?)"
    fi
    ;;

  *)
  echo "Usage: $0 {start|stop|status|restart|command \"server command\"}"
  exit 1
  ;;
esac

exit 0
